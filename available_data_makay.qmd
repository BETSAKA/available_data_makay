---
title: "Available data on Makay protected area"
author: "Florent Bédécarrats"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Working environment

We use R and a series of packages dedicated to spatial data and analysis.

```{r load_packages, warning=FALSE}
library(aws.s3)
library(tidyverse) # toolkit for data manipulation
library(geodata) # to get municipalities
library(sf) # to handle spatial data (vectors)
library(terra) # to handle patial data (rasters)
library(mapme.biodiversity) # to compute spatial indicators
library(tmap) # nice maps
library(zoo) # time series
library(units) # ensures units are right
library(future) # to parallelize computations
library(exactextractr) # engine for mapme.biodiversity
library(SPEI) # to compute rainfall  
```

## Makay protected area

We load the Makay protected area boundaries.

```{r admin_data}

makay_ap <- st_read("data/Makay_wgs84.geojson") %>%
  rename(Statut = SOURCETHM) %>%
  mutate(Statut = recode(Statut, "zone tampon" = "Zone tampon"))

# Fist we dissolve the different areas
makay_union <- makay_ap %>%
  st_union() %>%
  st_sf() %>%
  st_make_valid()

# Draw map
tmap_mode("view")
tm_shape(makay_ap) +
  tm_polygons(col = "Statut", alpha = 0.5) +
  tm_shape(makay_union) +
  tm_borders(col = "red") + 
  tm_basemap("OpenStreetMap")
```

The protected area is composted of five polygons with different status: four polygons are cores, and one polygon is a buffer area.

## Administrative areas

We will now select all municipalities located within a 20km distance from the outer border of the Makay protected area (core or buffer zone).

```{r make_buffer}

buff_size <- 20
# Create a 20km buffer around Makay PA
makay_ext_buffer <- makay_union %>%
  st_buffer(dist = set_units(buff_size, km)) %>%
  st_as_sf()
# Download Madagascar municipalities
muni_mada <- gadm("MDG", level  =4, path = "data") %>%
  st_as_sf() %>%
  rename(Nom_province = NAME_1, Nom_region = NAME_2, Nom_district = NAME_3,
         Nom_commune = NAME_4)
# Select municipalities that intersect the buffer
muni_makay <- muni_mada %>%
  st_filter(makay_union, .predicate = st_intersects)
muni_makay_names <- pluck(muni_makay, "Nom_commune")
muni_around_makay <- muni_mada %>%
  st_filter(makay_ext_buffer, .predicate = st_intersects)
muni_around_makay_names <- pluck(muni_around_makay, "Nom_commune")
muni_makay <- muni_mada %>%
  st_filter(makay_union, .predicate = st_intersects)

muni_around_ext_makay <- muni_around_makay_names[!(muni_around_makay_names %in% 
                                                     muni_makay_names)]

# Draw map
tm_shape(makay_union) +
  tm_borders(col = "red", lwd = 2) + 
  tm_shape(muni_around_makay) + 
  tm_borders(col = "blue") +
  tm_fill(alpha = 0, id = "Nom_commune", 
          popup.vars = c("Nom_commune","Nom_district", "Nom_region", 
                         "Nom_province")) +
  tm_basemap("OpenStreetMap")
```

There are `r nrow(muni_makay)` municipalities that directly overlap with Makay: `r paste(muni_makay_names, collapse = ", ")`. There are `r nrow(muni_around_makay) - nrow(muni_makay)` municipalities that do not directly overlap with Makay PA but are located within a `r buff_size` km radius from Makay PA: `r paste(muni_around_ext_makay, collapse = ", ")`.

## Rainfall

We use the CHIRPS data from NASA to estimate 3 day average rainfall on the Makay protected area. We compute the data using the package mapme.biodiversity [@mapme.biodiversity].

```{r rainfall}
# We group Makay PA zones and communes to have an object with all areas of interest
# We keep only one common field "name"
aoi <- bind_rows(
  filter(makay_ap, Statut == "Zone tampon"),
  filter(makay_ap, Statut == "Noyau dur") %>% 
    mutate(Statut = paste0(Statut, "_", 1:4))) %>%
  select(name = Statut) %>%
  bind_rows(
    mutate(makay_union, name = "Ensemble")) %>%
  mutate(name = paste0("AP Makay : ", name)) %>%
  bind_rows(select(muni_around_makay, name = Nom_commune)) %>%
  st_cast("POLYGON")

# 
# makay_union_pf <- init_portfolio(makay_union, years = 1990:2020) %>%
#   get_resources("chirps")
# 
# makay_union_pf <- makay_union_pf %>%
#   calc_indicators("precipitation_chirps",
#                   engine = "exactextract",
#                   scales_spi = 3,
#                   spi_prev_years = 8)
# plan(sequential)
# we use parallel computing to reduce processing time
plan(multisession, workers = 8)

# Reference portfolio (chirps data was loaded at startup)
aoi <- init_portfolio(aoi, years = 1990:2020,
                      outdir = "data") %>%
  get_resources("chirps")

# Compute precipitation
aoi <- aoi %>%
  calc_indicators("precipitation_chirps",
                  engine = "exactextract",
                  scales_spi = 3,
                  spi_prev_years = 8)
```

## Cyclones

We use the Tropical cyclone best track data (IBTrACS) to get history of cyclone trajectories and cyclone attributes [@knapp_international_2010], as well as raw code from [@mapme.protectedareas].

```{r cyclones}
if (!file.exists("ibtracs/IBTrACS.since1980.list.v04r00.lines.shp")) {
  dir.create("ibtracs")
  download.file(url = "https://www.ncei.noaa.gov/data/international-best-track-archive-for-climate-stewardship-ibtracs/v04r00/access/shapefile/IBTrACS.since1980.list.v04r00.lines.zip", 
                destfile = "ibtracs/ibtracs_lines.zip")
  unzip("ibtracs/ibtracs_lines.zip", exdir = "ibtracs")
}

# column description is given here: https://www.ncei.noaa.gov/sites/default/files/2021-07/IBTrACS_v04_column_documentation.pdf
cyclones <- read_sf("ibtracs/IBTrACS.since1980.list.v04r00.lines.shp")

cyclones$wind_combinded <- cyclones %>%
  select(contains("WIND")) %>%
  select(-WMO_WIND) %>%
  st_drop_geometry() %>%
  rowMeans(., na.rm = T)

cyclones <- cyclones %>%
  filter(!is.na(wind_combinded))
# create a dataset for windspeeds above 64 knots (more or less the threashold for winds to cause forest disturbances)
# hist(cyclones$wind_combinded)
# table(cyclones$wind_combinded>64)/nrow(cyclones) # will contain only about 19% of all obs. 

cyclones_subset <- cyclones %>% 
  filter(wind_combinded>64) %>% 
  filter(DIST2LAND<100)


# ---- create a combined 64 knots radius estimation for buffering ----

cyclones_subset$R64_combined <- cyclones_subset %>%
  select(contains("R64")) %>%
  st_drop_geometry() %>%
  rowMeans(., na.rm = T)

# create linear model
cyclones_model <- cyclones_subset %>% 
  lm(R64_combined ~ wind_combinded, data = .)

# predict based on real data 
cyclones_subset$R64_modeled <- predict.lm(cyclones_model, cyclones_subset)

# substitute missings with predicted
cyclones_subset$R64_combined_model <- ifelse(
    is.nan(cyclones_subset$R64_combined) == T,
    cyclones_subset$R64_modeled,
    cyclones_subset$R64_combined)

# ---- regional subset (if desired) -----

# Create a raser for Androy

mada_rast <- terra::vect(mada) %>%
  st_as_sf() %>%
  st_transform(crs = st_crs(cyclones_subset))

cyclones_mada <- st_intersection(cyclones_subset, mada_rast)

tm_shape(cyclones_mada) +
  tm_lines() + 
  tm_shape(androy) +
  tm_borders(col = "red")

```
